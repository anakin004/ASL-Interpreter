{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\code\\\\AI\\\\ASL\\\\my-ai-app\\\\src\\\\PasswordChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PasswordChecker.css'; // Ensure this matches your file structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordChecker = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [isValid, setIsValid] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const validatePassword = () => {\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasNumbers = /\\d/.test(password);\n    const hasSpecialChars = /[!@#$%^&*]/.test(password);\n    const isValid = hasUpperCase && hasLowerCase && hasNumbers && hasSpecialChars && password.length >= 8;\n    setIsValid(isValid);\n    setErrorMessage(isValid ? '' : 'Incorrect');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-checker-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Password Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"password-form\",\n      onSubmit: e => {\n        e.preventDefault();\n        validatePassword();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? 'text' : 'password',\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"password-input\",\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"checkbox\",\n          checked: showPassword,\n          onChange: () => setShowPassword(!showPassword)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-label\",\n          children: \"Show password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Check Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }, this), isValid === true && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: \"Password is valid!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 38\n      }, this), isValid === false && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: \"Password is invalid!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(PasswordChecker, \"Ug1MEYKtb1PFB5DfvBRNRMZ0d8A=\");\n_c = PasswordChecker;\nexport default PasswordChecker;\nvar _c;\n$RefreshReg$(_c, \"PasswordChecker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PasswordChecker","_s","password","setPassword","showPassword","setShowPassword","isValid","setIsValid","errorMessage","setErrorMessage","validatePassword","hasUpperCase","test","hasLowerCase","hasNumbers","hasSpecialChars","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","checked","_c","$RefreshReg$"],"sources":["C:/Users/Ryan/code/AI/ASL/my-ai-app/src/PasswordChecker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './PasswordChecker.css'; // Ensure this matches your file structure\r\n\r\nconst PasswordChecker = () => {\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isValid, setIsValid] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const validatePassword = () => {\r\n        const hasUpperCase = /[A-Z]/.test(password);\r\n        const hasLowerCase = /[a-z]/.test(password);\r\n        const hasNumbers = /\\d/.test(password);\r\n        const hasSpecialChars = /[!@#$%^&*]/.test(password);\r\n        const isValid = hasUpperCase && hasLowerCase && hasNumbers && hasSpecialChars && password.length >= 8;\r\n\r\n        setIsValid(isValid);\r\n        setErrorMessage(isValid ? '' : 'Incorrect');\r\n    };\r\n\r\n    return (\r\n        <div className=\"password-checker-container\">\r\n            <h1 className=\"title\">Password Checker</h1>\r\n            <form className=\"password-form\" onSubmit={(e) => { e.preventDefault(); validatePassword(); }}>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        className=\"password-input\"\r\n                        placeholder=\"Enter your password\"\r\n                    />\r\n                </div>\r\n                <div className=\"checkbox-group\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        className=\"checkbox\"\r\n                        checked={showPassword}\r\n                        onChange={() => setShowPassword(!showPassword)}\r\n                    />\r\n                    <label className=\"checkbox-label\">Show password</label>\r\n                </div>\r\n                <button type=\"submit\" className=\"submit-button\">Check Password</button>\r\n                {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n                {isValid === true && <div className=\"success-message\">Password is valid!</div>}\r\n                {isValid === false && <div className=\"error-message\">Password is invalid!</div>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordChecker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}