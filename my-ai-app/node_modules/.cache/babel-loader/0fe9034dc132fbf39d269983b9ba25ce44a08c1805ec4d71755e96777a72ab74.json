{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\code\\\\AI\\\\ASL\\\\my-ai-app\\\\src\\\\PredictionComponent.js\",\n  _s = $RefreshSig$();\n// PredictionComponent.js\nimport React, { useEffect, useState } from 'react';\nimport './PredictionComponent.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst actions = [\"hello\", \"iloveyou\", \"thanks\"]; // Define your actions array\n\nconst PredictionComponent = () => {\n  _s();\n  const [predictionIndex, setPredictionIndex] = useState(null); // Store index of prediction\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/prediction\");\n        const data = await response.json();\n\n        // Get the index of the predicted action\n        const index = actions.indexOf(data.prediction);\n        setPredictionIndex(index !== -1 ? index : null); // Set index or null if not found\n      } catch (error) {\n        console.error(\"Error fetching prediction:\", error);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"prediction-heading\",\n      children: [\"Prediction Index: \", predictionIndex !== null ? predictionIndex : \"Waiting for prediction...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prediction-box\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"prediction-text\",\n        children: predictionIndex !== null ? actions[predictionIndex] : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(PredictionComponent, \"zTztIA9NDUOJB6M6x5pvxKtCI7Q=\");\n_c = PredictionComponent;\nexport default PredictionComponent;\nvar _c;\n$RefreshReg$(_c, \"PredictionComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","actions","PredictionComponent","_s","predictionIndex","setPredictionIndex","interval","setInterval","response","fetch","data","json","index","indexOf","prediction","error","console","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ryan/code/AI/ASL/my-ai-app/src/PredictionComponent.js"],"sourcesContent":["// PredictionComponent.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport './PredictionComponent.css'; // Import the CSS file\r\n\r\nconst actions = [\"hello\", \"iloveyou\", \"thanks\"]; // Define your actions array\r\n\r\nconst PredictionComponent = () => {\r\n    const [predictionIndex, setPredictionIndex] = useState(null); // Store index of prediction\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            try {\r\n                const response = await fetch(\"http://127.0.0.1:5000/prediction\");\r\n                const data = await response.json();\r\n                \r\n                // Get the index of the predicted action\r\n                const index = actions.indexOf(data.prediction);\r\n                setPredictionIndex(index !== -1 ? index : null); // Set index or null if not found\r\n            } catch (error) {\r\n                console.error(\"Error fetching prediction:\", error);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"prediction-container\">\r\n            <h1 className=\"prediction-heading\">Prediction Index: {predictionIndex !== null ? predictionIndex : \"Waiting for prediction...\"}</h1>\r\n            <div className=\"prediction-box\">\r\n                <p className=\"prediction-text\">{predictionIndex !== null ? actions[predictionIndex] : \"\"}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PredictionComponent;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;;AAEjD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9DD,SAAS,CAAC,MAAM;IACZ,MAAMS,QAAQ,GAAGC,WAAW,CAAC,YAAY;MACrC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;QAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,KAAK,GAAGX,OAAO,CAACY,OAAO,CAACH,IAAI,CAACI,UAAU,CAAC;QAC9CT,kBAAkB,CAACO,KAAK,KAAK,CAAC,CAAC,GAAGA,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;MACrD,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAME,aAAa,CAACX,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAKkB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACjCnB,OAAA;MAAIkB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAAC,oBAAkB,EAACf,eAAe,KAAK,IAAI,GAAGA,eAAe,GAAG,2BAA2B;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpIvB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3BnB,OAAA;QAAGkB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAEf,eAAe,KAAK,IAAI,GAAGH,OAAO,CAACG,eAAe,CAAC,GAAG;MAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpB,EAAA,CA5BID,mBAAmB;AAAAsB,EAAA,GAAnBtB,mBAAmB;AA8BzB,eAAeA,mBAAmB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}