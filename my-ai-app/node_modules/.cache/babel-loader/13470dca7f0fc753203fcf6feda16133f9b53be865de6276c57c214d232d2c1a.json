{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\code\\\\AI\\\\ASL\\\\my-ai-app\\\\src\\\\CameraComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport './CameraComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraComponent = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Function to get access to the webcam\n  const getVideo = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoRef.current.srcObject = stream;\n    } catch (error) {\n      console.error(\"Error accessing webcam:\", error);\n    }\n  };\n\n  // Function to send the captured frame to the backend\n  const sendFrame = async data => {\n    try {\n      const response = await fetch('http://localhost:5000/video_feed', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          image: data\n        }) // Send the image data\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      console.log(\"Frame processed:\", result); // Handle the backend response\n    } catch (error) {\n      console.error('Error sending frame:', error);\n    }\n  };\n\n  // UseEffect for setting up video feed and capturing frames\n  useEffect(() => {\n    getVideo();\n    const intervalId = setInterval(sendFrame, 2000); // Capture every 2 seconds\n    return () => clearInterval(intervalId); // Cleanup interval on unmount\n  }, [sendFrame]); // Add captureFrame to the dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"camera-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      className: \"camera-feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendFrame,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(CameraComponent, \"0gwqVvoOV2or9Ql4L8GH2BGn3hc=\");\n_c = CameraComponent;\nexport default CameraComponent;\nvar _c;\n$RefreshReg$(_c, \"CameraComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","CameraComponent","_s","videoRef","canvasRef","getVideo","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","sendFrame","data","response","fetch","method","headers","body","JSON","stringify","image","ok","Error","result","json","log","intervalId","setInterval","clearInterval","className","children","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ryan/code/AI/ASL/my-ai-app/src/CameraComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\r\nimport './CameraComponent.css';\r\n\r\nconst CameraComponent = () => {\r\n    const videoRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n\r\n\r\n    // Function to get access to the webcam\r\n    const getVideo = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({\r\n                video: true,\r\n            });\r\n            videoRef.current.srcObject = stream;\r\n        } catch (error) {\r\n            console.error(\"Error accessing webcam:\", error);\r\n        }\r\n    };\r\n\r\n    // Function to send the captured frame to the backend\r\n    const sendFrame = async (data) => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/video_feed', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ image: data }), // Send the image data\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            const result = await response.json();\r\n            console.log(\"Frame processed:\", result); // Handle the backend response\r\n        } catch (error) {\r\n            console.error('Error sending frame:', error);\r\n        }\r\n    };\r\n\r\n    // UseEffect for setting up video feed and capturing frames\r\n    useEffect(() => {\r\n        getVideo();\r\n\r\n        const intervalId = setInterval(sendFrame, 2000); // Capture every 2 seconds\r\n        return () => clearInterval(intervalId); // Cleanup interval on unmount\r\n    }, [sendFrame]); // Add captureFrame to the dependency array\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"camera-container\">\r\n            <video ref={videoRef} autoPlay className=\"camera-feed\" />\r\n            <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n            <button onClick={sendFrame}>Start</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CameraComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAC7D,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMO,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;;EAG9B;EACA,MAAMQ,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QACrDC,KAAK,EAAE;MACX,CAAC,CAAC;MACFP,QAAQ,CAACQ,OAAO,CAACC,SAAS,GAAGN,MAAM;IACvC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;;EAED;EACA,MAAME,SAAS,GAAG,MAAOC,IAAI,IAAK;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,KAAK,EAAER;QAAK,CAAC,CAAC,CAAE;MAC3C,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MAEA,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MACpCd,OAAO,CAACe,GAAG,CAAC,kBAAkB,EAAEF,MAAM,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOd,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;;EAED;EACAjB,SAAS,CAAC,MAAM;IACZS,QAAQ,CAAC,CAAC;IAEV,MAAMyB,UAAU,GAAGC,WAAW,CAAChB,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;IACjD,OAAO,MAAMiB,aAAa,CAACF,UAAU,CAAC,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACf,SAAS,CAAC,CAAC,CAAC,CAAC;;EAIjB,oBACIf,OAAA;IAAKiC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BlC,OAAA;MAAOmC,GAAG,EAAEhC,QAAS;MAACiC,QAAQ;MAACH,SAAS,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDxC,OAAA;MAAQmC,GAAG,EAAE/B,SAAU;MAACqC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDxC,OAAA;MAAQ2C,OAAO,EAAE5B,SAAU;MAAAmB,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd,CAAC;AAACtC,EAAA,CAxDID,eAAe;AAAA2C,EAAA,GAAf3C,eAAe;AA0DrB,eAAeA,eAAe;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}