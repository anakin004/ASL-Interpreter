{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\code\\\\AI\\\\ASL\\\\my-ai-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PredictionComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictionComponent = () => {\n  _s();\n  const [input, setInput] = useState([0.0, 0.0, 0.0]);\n  const [prediction, setPrediction] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleInputChange = (e, index) => {\n    const newInput = [...input];\n    newInput[index] = parseFloat(e.target.value);\n    setInput(newInput);\n  };\n  const handlePredict = async () => {\n    if (input.some(value => isNaN(value))) {\n      setError('Please enter valid numbers for all inputs.');\n      return;\n    }\n    setLoading(true); //  setting loading to true\n    setError(null); // clearing errors\n    try {\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPrediction(data.prediction);\n    } catch (err) {\n      console.error('Error:', err);\n      setError('An error occurred while fetching the prediction.');\n    } finally {\n      setLoading(false); // resetting loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Start-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Model Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: input.map((value, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Input \", index + 1, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: value,\n          onChange: e => handleInputChange(e, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePredict,\n      disabled: loading,\n      children: loading ? 'Loading...' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Prediction Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(prediction)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(PredictionComponent, \"1Iy115ETK8SGeDETtyQj7Io9Z+4=\");\n_c = PredictionComponent;\nexport default PredictionComponent;\nvar _c;\n$RefreshReg$(_c, \"PredictionComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PredictionComponent","_s","input","setInput","prediction","setPrediction","error","setError","loading","setLoading","handleInputChange","e","index","newInput","parseFloat","target","value","handlePredict","some","isNaN","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Ryan/code/AI/ASL/my-ai-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './PredictionComponent.css'; \n\nconst PredictionComponent = () => {\n    const [input, setInput] = useState([0.0, 0.0, 0.0]);\n    const [prediction, setPrediction] = useState(null);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const handleInputChange = (e, index) => {\n        const newInput = [...input];\n        newInput[index] = parseFloat(e.target.value);\n        setInput(newInput);\n    };\n\n    const handlePredict = async () => {\n        if (input.some(value => isNaN(value))) {\n            setError('Please enter valid numbers for all inputs.');\n            return;\n        }\n        setLoading(true); //  setting loading to true\n        setError(null); // clearing errors\n        try {\n            const response = await fetch('http://localhost:5000/predict', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ input }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            setPrediction(data.prediction);\n        } catch (err) {\n            console.error('Error:', err);\n            setError('An error occurred while fetching the prediction.');\n        } finally {\n            setLoading(false); // resetting loading state\n        }\n    };\n\n    return (\n        <div className=\"Start-container\">\n            <h1>AI Model Prediction</h1>\n            <div className=\"input-container\">\n                {input.map((value, index) => (\n                    <label key={index}>\n                        Input {index + 1}:\n                        <input\n                            type=\"number\"\n                            value={value}\n                            onChange={(e) => handleInputChange(e, index)}\n                        />\n                    </label>\n                ))}\n            </div>\n            <button onClick={handlePredict} disabled={loading}>\n                {loading ? 'Loading...' : 'Start'}\n            </button>\n\n            {prediction && (\n                <div className=\"result-container\">\n                    <h2>Prediction Result:</h2>\n                    <p>{JSON.stringify(prediction)}</p>\n                </div>\n            )}\n\n            {error && (\n                <div className=\"error-container\">\n                    <h2>Error:</h2>\n                    <p>{error}</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PredictionComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}