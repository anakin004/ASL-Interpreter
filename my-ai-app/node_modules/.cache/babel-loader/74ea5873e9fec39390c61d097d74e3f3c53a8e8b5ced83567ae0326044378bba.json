{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\code\\\\AI\\\\ASL\\\\my-ai-app\\\\src\\\\CameraComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './CameraComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraComponent = () => {\n  _s();\n  const videoRef = useRef(null);\n\n  // Function to get access to the webcam\n  const getVideo = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoRef.current.srcObject = stream;\n    } catch (error) {\n      console.error(\"Error accessing webcam:\", error);\n    }\n  };\n\n  // Function to send the captured frame to the backend\n  const sendFrame = async () => {\n    const canvas = document.createElement('canvas');\n    const video = videoRef.current;\n\n    // Set the canvas size to match the video frame\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext('2d');\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    const data = canvas.toDataURL('image/jpeg'); // Convert to Base64\n\n    try {\n      const response = await fetch('http://localhost:5000/video_feed', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          image: data\n        }) // Send the image data\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      console.log(\"Prediction received:\", result.prediction); // Handle the backend response\n      // You can also display this prediction in your UI as needed\n    } catch (error) {\n      console.error('Error sending frame:', error);\n    }\n  };\n\n  // UseEffect for setting up video feed and capturing frames\n  useEffect(() => {\n    getVideo();\n    const intervalId = setInterval(sendFrame, 2000); // Send frame every 2 seconds\n    return () => clearInterval(intervalId); // Cleanup interval on unmount\n  }, []); // No need for dependencies\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"camera-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      className: \"camera-feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendFrame,\n      children: \"Get Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(CameraComponent, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = CameraComponent;\nexport default CameraComponent;\nvar _c;\n$RefreshReg$(_c, \"CameraComponent\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","CameraComponent","_s","videoRef","getVideo","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","sendFrame","canvas","document","createElement","width","videoWidth","height","videoHeight","context","getContext","drawImage","data","toDataURL","response","fetch","method","headers","body","JSON","stringify","image","ok","Error","result","json","log","prediction","intervalId","setInterval","clearInterval","className","children","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ryan/code/AI/ASL/my-ai-app/src/CameraComponent.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport './CameraComponent.css';\r\n\r\nconst CameraComponent = () => {\r\n    const videoRef = useRef(null);\r\n\r\n    // Function to get access to the webcam\r\n    const getVideo = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({\r\n                video: true,\r\n            });\r\n            videoRef.current.srcObject = stream;\r\n        } catch (error) {\r\n            console.error(\"Error accessing webcam:\", error);\r\n        }\r\n    };\r\n\r\n    // Function to send the captured frame to the backend\r\n    const sendFrame = async () => {\r\n        const canvas = document.createElement('canvas');\r\n        const video = videoRef.current;\r\n\r\n        // Set the canvas size to match the video frame\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n        const context = canvas.getContext('2d');\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        \r\n        const data = canvas.toDataURL('image/jpeg'); // Convert to Base64\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/video_feed', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ image: data }), // Send the image data\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            const result = await response.json();\r\n            console.log(\"Prediction received:\", result.prediction); // Handle the backend response\r\n            // You can also display this prediction in your UI as needed\r\n        } catch (error) {\r\n            console.error('Error sending frame:', error);\r\n        }\r\n    };\r\n\r\n    // UseEffect for setting up video feed and capturing frames\r\n    useEffect(() => {\r\n        getVideo();\r\n\r\n        const intervalId = setInterval(sendFrame, 2000); // Send frame every 2 seconds\r\n        return () => clearInterval(intervalId); // Cleanup interval on unmount\r\n    }, []); // No need for dependencies\r\n\r\n    return (\r\n        <div className=\"camera-container\">\r\n            <video ref={videoRef} autoPlay className=\"camera-feed\" />\r\n            <button onClick={sendFrame}>Get Prediction</button> {/* Button to get prediction immediately */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CameraComponent;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}