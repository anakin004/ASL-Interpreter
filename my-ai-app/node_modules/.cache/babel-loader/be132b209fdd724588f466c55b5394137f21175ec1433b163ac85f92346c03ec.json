{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\code\\\\AI\\\\ASL\\\\my-ai-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Use useNavigate instead\nimport './PasswordChecker.css'; // Ensure you create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordChecker = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Use useNavigate hook\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent the default form submission\n    if (password === 'asl') {\n      navigate('/next'); // Navigate to the next page\n    } else {\n      setError('Incorrect password! Try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-checker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Password Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Enter your password\",\n        className: \"password-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Check Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(PasswordChecker, \"NYbpdcBoBrg1U4+13qVf6gYm4gg=\", false, function () {\n  return [useNavigate];\n});\n_c = PasswordChecker;\nexport default PasswordChecker;\nvar _c;\n$RefreshReg$(_c, \"PasswordChecker\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","PasswordChecker","_s","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Ryan/code/AI/ASL/my-ai-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Use useNavigate instead\nimport './PasswordChecker.css'; // Ensure you create this CSS file\n\nconst PasswordChecker = () => {\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const navigate = useNavigate(); // Use useNavigate hook\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); // Prevent the default form submission\n        if (password === 'asl') {\n            navigate('/next'); // Navigate to the next page\n        } else {\n            setError('Incorrect password! Try again.');\n        }\n    };\n\n    return (\n        <div className=\"password-checker\">\n            <h1>Password Checker</h1>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Enter your password\"\n                    className=\"password-input\"\n                />\n                <button type=\"submit\" className=\"submit-button\">Check Password</button>\n            </form>\n            {error && <div className=\"error-message\">{error}</div>}\n        </div>\n    );\n};\n\nexport default PasswordChecker;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAO,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMU,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,IAAIP,QAAQ,KAAK,KAAK,EAAE;MACpBI,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACvB,CAAC,MAAM;MACHD,QAAQ,CAAC,gCAAgC,CAAC;IAC9C;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKW,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BZ,OAAA;MAAAY,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBhB,OAAA;MAAMiB,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBACzBZ,OAAA;QACIkB,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEhB,QAAS;QAChBiB,QAAQ,EAAGX,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC,qBAAqB;QACjCX,SAAS,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFhB,OAAA;QAAQkB,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,EACNX,KAAK,iBAAIL,OAAA;MAAKW,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEd,CAAC;AAACd,EAAA,CA/BID,eAAe;EAAA,QAIAH,WAAW;AAAA;AAAAyB,EAAA,GAJ1BtB,eAAe;AAiCrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}