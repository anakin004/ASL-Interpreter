{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\code\\\\AI\\\\ASL\\\\my-ai-app\\\\src\\\\Showcase.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Showcase.css'; // Ensure you have this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoShowcase = () => {\n  _s();\n  const [isDescriptionVisible, setIsDescriptionVisible] = useState(false); // State for description visibility\n\n  // Function to toggle description visibility\n  const toggleDescription = () => {\n    setIsDescriptionVisible(!isDescriptionVisible); // Toggle visibility\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-showcase\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-icon\",\n      onClick: toggleDescription,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), isDescriptionVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description-text fade-in\",\n        children: \"This project showcases a collection of videos that convey different messages. Hover over the video to see the description fade in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoShowcase, \"lysHsKFwUY16qVHx0nKkwGWGTr0=\");\n_c = VideoShowcase;\nexport default VideoShowcase;\nvar _c;\n$RefreshReg$(_c, \"VideoShowcase\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VideoShowcase","_s","isDescriptionVisible","setIsDescriptionVisible","toggleDescription","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ryan/code/AI/ASL/my-ai-app/src/Showcase.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Showcase.css'; // Ensure you have this CSS file\r\n\r\nconst VideoShowcase = () => {\r\n    const [isDescriptionVisible, setIsDescriptionVisible] = useState(false); // State for description visibility\r\n\r\n    // Function to toggle description visibility\r\n    const toggleDescription = () => {\r\n        setIsDescriptionVisible(!isDescriptionVisible); // Toggle visibility\r\n    };\r\n\r\n    return (\r\n        <div className=\"video-showcase\">\r\n            {/* Hamburger Menu Icon */}\r\n            <div className=\"menu-icon\" onClick={toggleDescription}>\r\n                <div className=\"line\"></div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"line\"></div>\r\n            </div>\r\n\r\n            {/* Render the description only if it's visible */}\r\n            {isDescriptionVisible && (\r\n                <div className=\"description\">\r\n                    <div className=\"description-text fade-in\">\r\n                        This project showcases a collection of videos that convey different messages. \r\n                        Hover over the video to see the description fade in.\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoShowcase;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzE;EACA,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC5BD,uBAAuB,CAAC,CAACD,oBAAoB,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACIH,OAAA;IAAKM,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAE3BP,OAAA;MAAKM,SAAS,EAAC,WAAW;MAACE,OAAO,EAAEH,iBAAkB;MAAAE,QAAA,gBAClDP,OAAA;QAAKM,SAAS,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5BZ,OAAA;QAAKM,SAAS,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5BZ,OAAA;QAAKM,SAAS,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,EAGLT,oBAAoB,iBACjBH,OAAA;MAAKM,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBP,OAAA;QAAKM,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EAAC;MAG1C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACV,EAAA,CA5BID,aAAa;AAAAY,EAAA,GAAbZ,aAAa;AA8BnB,eAAeA,aAAa;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}