{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\code\\\\AI\\\\ASL\\\\my-ai-app\\\\src\\\\PasswordChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport './PasswordChecker.css'; // Ensure you create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordChecker = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // State to manage authentication\n  const navigate = useNavigate(); // Use useNavigate hook\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent the default form submission\n    if (password === 'asl') {\n      setIsAuthenticated(true); // Set authentication state\n      setError(''); // Clear error message\n    } else {\n      setError('Incorrect password! Try again.');\n    }\n  };\n  const handleNavigation = path => {\n    navigate(path); // Navigate to the specified path\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-checker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Password Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Enter your password\",\n        className: \"password-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Check Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNavigation('/videos/hello.mp4'),\n        children: \"Hello Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNavigation('/videos/thanks.mp4'),\n        children: \"Thanks Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNavigation('/videos/love.mp4'),\n        children: \"I Love You Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(PasswordChecker, \"JarwVfo+B65tNjN7tzetpkSRFzU=\", false, function () {\n  return [useNavigate];\n});\n_c = PasswordChecker;\nexport default PasswordChecker;\nvar _c;\n$RefreshReg$(_c, \"PasswordChecker\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","PasswordChecker","_s","password","setPassword","error","setError","isAuthenticated","setIsAuthenticated","navigate","handleSubmit","e","preventDefault","handleNavigation","path","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ryan/code/AI/ASL/my-ai-app/src/PasswordChecker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport './PasswordChecker.css'; // Ensure you create this CSS file\r\n\r\nconst PasswordChecker = () => {\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false); // State to manage authentication\r\n    const navigate = useNavigate(); // Use useNavigate hook\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // Prevent the default form submission\r\n        if (password === 'asl') {\r\n            setIsAuthenticated(true); // Set authentication state\r\n            setError(''); // Clear error message\r\n        } else {\r\n            setError('Incorrect password! Try again.');\r\n        }\r\n    };\r\n\r\n    const handleNavigation = (path) => {\r\n        navigate(path); // Navigate to the specified path\r\n    };\r\n\r\n    return (\r\n        <div className=\"password-checker\">\r\n            <h1>Password Checker</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Enter your password\"\r\n                    className=\"password-input\"\r\n                />\r\n                <button type=\"submit\" className=\"submit-button\">Check Password</button>\r\n            </form>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            {/* Show buttons only if authenticated */}\r\n            {isAuthenticated && (\r\n                <div className=\"navigation-buttons\">\r\n                    <button onClick={() => handleNavigation('/videos/hello.mp4')}>Hello Video</button>\r\n                    <button onClick={() => handleNavigation('/videos/thanks.mp4')}>Thanks Video</button>\r\n                    <button onClick={() => handleNavigation('/videos/love.mp4')}>I Love You Video</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordChecker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}