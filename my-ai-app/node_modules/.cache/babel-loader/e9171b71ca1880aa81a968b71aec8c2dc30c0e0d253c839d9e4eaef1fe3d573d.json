{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\code\\\\AI\\\\ASL\\\\my-ai-app\\\\src\\\\CameraComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './CameraComponent.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraComponent = () => {\n  _s();\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const getVideo = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (err) {\n        console.error('Error accessing webcam:', err);\n      }\n    };\n    getVideo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Camera Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      style: {\n        width: '100%',\n        borderRadius: '8px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(CameraComponent, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = CameraComponent;\nexport default CameraComponent;\nvar _c;\n$RefreshReg$(_c, \"CameraComponent\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","CameraComponent","_s","videoRef","getVideo","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","style","width","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Ryan/code/AI/ASL/my-ai-app/src/CameraComponent.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport './CameraComponent.css'; // Import CSS file for styling\r\n\r\nconst CameraComponent = () => {\r\n    const videoRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const getVideo = async () => {\r\n            try {\r\n                const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n                if (videoRef.current) {\r\n                    videoRef.current.srcObject = stream;\r\n                }\r\n            } catch (err) {\r\n                console.error('Error accessing webcam:', err);\r\n            }\r\n        };\r\n        \r\n        getVideo();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Camera Feed</h1>\r\n            <video ref={videoRef} autoPlay style={{ width: '100%', borderRadius: '8px' }} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CameraComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACZ,MAAMO,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE,IAAIN,QAAQ,CAACO,OAAO,EAAE;UAClBP,QAAQ,CAACO,OAAO,CAACC,SAAS,GAAGN,MAAM;QACvC;MACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MACjD;IACJ,CAAC;IAEDR,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIJ,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBnB,OAAA;MAAOoB,GAAG,EAAEjB,QAAS;MAACkB,QAAQ;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAM;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/E,CAAC;AAEd,CAAC;AAACjB,EAAA,CAxBID,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AA0BrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}